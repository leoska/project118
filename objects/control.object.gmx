<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_computer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 3D init
d3d_start();
d3d_set_lighting(true);       // Lighting ON
//d3d_set_culling(true);      // Optimization
//d3d_set_hidden(true);       // 3D depth
//d3d_set_perspective(true);

// Window setup
display_set_gui_size(view_wview[0], view_hview[0]);

// Debug
debug_info = 0;
show_debug_overlay(true); 

// Camera Pointer
cam = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_released(vk_escape))
{
    game_end();
}

if (keyboard_check_released(vk_f1))
{
    debug_info = 1 - debug_info;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vw, vh, pw, ph, c1, c2, c3, c4, c5, _x, _y, _x2, _y2;
vw = view_wview[0];
vh = view_hview[0];
pw = view_wport;
ph = view_hport;
c1 = c_blue;
c2 = c_white;
c3 = c_dkgray;
c4 = c_ltgray;
c5 = c_black;
_x = vw / 4;
_y = 0;
_x2 = 0;
_y2 = 0;


// Draw debug text
d3d_set_lighting(false);
if (debug_info)
{
    draw_text_colour(_x + 10, _y + 25, "FPS: " + string(fps) + " / " + string(room_speed), c2, c2, c2, c2, 1);
    draw_text_colour(_x + 10, _y + 40, "FPS_REAL: " + string(fps_real), c2, c2, c2, c2, 1);
    draw_text_colour(_x + 10, _y + 85, "X: " + string(cam.x) + "; View to X: " + string(cam.xt), c2, c2, c2, c2, 1);
    draw_text_colour(_x + 10, _y + 100, "Y: " + string(cam.y) + "; View to Y: " + string(cam.yt), c2, c2, c2, c2, 1);
    draw_text_colour(_x + 10, _y + 115, "Z: " + string(cam.z) + "; View to Z: " + string(cam.zt), c2, c2, c2, c2, 1);
    draw_text_colour(_x + 10, _y + 130, string(mouse_x), c2, c2, c2, c2, 1);
}

// Draw interface
// Background for tools panel
draw_set_alpha(0.7333);
draw_rectangle_colour(0, 0, vw / 4, vh, c3, c3, c3, c3, false);

// Save button
_x = 15;
_y = 20;
_x2 = vw / 8 - 10;
_y2 = 50;
draw_rectangle_colour(_x, _y, _x2, _y2, c4, c4, c4, c4, false);
draw_text_colour((vw / 8 + 5) / 2 - string_width("SAVE") / 2, 35 - string_height("SAVE") / 2, "SAVE", c2, c2, c2, c2, 1);
if ((mouse_x &gt; _x) &amp;&amp; (mouse_y &gt; _y) &amp;&amp; (mouse_x &lt; _x2) &amp;&amp; (mouse_y &lt; _y2))
{
    if (mouse_check_button_released(mb_left))
    {
        get_string("Enter map name:", "");
        get_save_filename("", "");
    }
}

// SUOER MEGAFAFSAFASFDASFSADSAD
// Load button
_x = vw / 8 + 10;
_y = 20;
_x2 = vw / 4 - 15;
_y2 = 50;
draw_rectangle_colour(_x, _y, _x2, _y2, c4, c4, c4, c4, false);
draw_text_colour((vw / 4 - 15) / 2 + (vw / 8 + 10) / 2 - string_width("LOAD") / 2, 35 - string_height("LOAD") / 2, "LOAD", c2, c2, c2, c2, 1);
if ((mouse_x &gt; _x) &amp;&amp; (mouse_y &gt; _y) &amp;&amp; (mouse_x &lt; _x2) &amp;&amp; (mouse_y &lt; _y2))
{
    if (mouse_check_button_released(mb_left))
    {
        get_string("Enter map name:", "");
        get_save_filename("", "");
    }
}

// Options button
_x = 15;
_y = 70;
_x2 = vw / 8 - 10;
_y2 = 100;
draw_rectangle_colour(_x, _y, _x2, _y2, c4, c4, c4, c4, false);
draw_text_colour((vw / 8 + 5) / 2 - string_width("OPTIONS") / 2, 85 - string_height("OPTIONS") / 2, "OPTIONS", c2, c2, c2, c2, 1);
if ((mouse_x &gt; _x) &amp;&amp; (mouse_y &gt; _y) &amp;&amp; (mouse_x &lt; _x2) &amp;&amp; (mouse_y &lt; _y2))
{
    if (mouse_check_button_released(mb_left))
    {
        get_string("Enter map name:", "");
        get_save_filename("", "");
    }
}

// Quit button
_x = vw / 8 + 10;
_y = 70;
_x2 = vw / 4 - 15;
_y2 = 100;
draw_rectangle_colour(_x, _y, _x2, _y2, c4, c4, c4, c4, false);
draw_text_colour((vw / 4 - 15) / 2 + (vw / 8 + 10) / 2 - string_width("QUIT") / 2, 85 - string_height("QUIT") / 2, "QUIT", c2, c2, c2, c2, 1);
if ((mouse_x &gt; _x) &amp;&amp; (mouse_y &gt; _y) &amp;&amp; (mouse_x &lt; _x2) &amp;&amp; (mouse_y &lt; _y2))
{
    if (mouse_check_button_released(mb_left))
    {
        get_string("Enter map name:", "");
        get_save_filename("", "");
    }
}


draw_rectangle_colour(15, 150, vw / 4 - 15, vh - 10, c5, c5, c5, c5, false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_green);
d3d_draw_block(-10, -10, -1, 10, 10, -1, -1, 1, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
